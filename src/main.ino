#include <Arduino.h>
#include <U8g2lib.h>
#include <SPI.h>
#include <Wire.h>

//This is exported directly from gimp by exporting as XBM, opening the file in a text aeditor and copying the content of the file
//https://sandhansblog.wordpress.com/2017/04/16/interfacing-displaying-a-custom-graphic-on-an-0-96-i2c-oled/
#define bitmap_width 128
#define bitmap_height 32
static unsigned char bitmap_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd4, 0xff,
   0xff, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x40, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff,
   0xff, 0x7f, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff, 0x0f, 0x00, 0x00,
   0x00, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xfe, 0xfb,
   0xff, 0x7f, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff,
   0xff, 0x3f, 0xfe, 0xe3, 0xff, 0xff, 0x03, 0x00, 0x00, 0xf8, 0xff, 0xff,
   0xff, 0xf3, 0xdf, 0xff, 0x5f, 0x39, 0xfe, 0xf1, 0xdf, 0xff, 0x1f, 0x00,
   0x00, 0xfe, 0xff, 0xff, 0xf1, 0xf0, 0x8f, 0xff, 0x0f, 0x30, 0xfc, 0xf1,
   0xdf, 0xff, 0x7f, 0x00, 0x80, 0xff, 0xff, 0xff, 0x43, 0xf8, 0x8f, 0xff,
   0x07, 0x30, 0xfc, 0xfd, 0x9f, 0xff, 0xff, 0x01, 0xe0, 0xff, 0xff, 0xff,
   0x03, 0xf8, 0x0f, 0xff, 0x03, 0x60, 0xfc, 0xff, 0x8f, 0xff, 0xff, 0x07,
   0xf0, 0xff, 0xff, 0xff, 0x07, 0xf8, 0x1f, 0xff, 0xc3, 0x61, 0xfc, 0xff,
   0x8f, 0xff, 0xff, 0x0f, 0xf8, 0xff, 0xdf, 0xff, 0x07, 0xe0, 0x1f, 0xff,
   0xe3, 0x61, 0xf8, 0xff, 0x07, 0xff, 0xff, 0x1f, 0xf8, 0xff, 0x8f, 0xff,
   0x07, 0xc0, 0x1f, 0xfe, 0xe1, 0xe1, 0xf8, 0x1f, 0x00, 0xf0, 0xff, 0x1f,
   0xfc, 0xff, 0x0f, 0xfd, 0x07, 0x00, 0x1f, 0xfe, 0xe1, 0xe1, 0xf8, 0x3f,
   0x00, 0xe0, 0xff, 0x3f, 0xfc, 0xff, 0x05, 0xf8, 0x01, 0x80, 0x3f, 0xfe,
   0xe3, 0xe1, 0xf0, 0x7c, 0x00, 0xf0, 0xff, 0x3f, 0xf8, 0xff, 0x00, 0xfc,
   0x01, 0xa0, 0x3f, 0xfc, 0x83, 0xf0, 0x30, 0xf8, 0x00, 0xf8, 0xff, 0x1f,
   0xf8, 0xff, 0x01, 0xfe, 0x10, 0xfc, 0x3f, 0xfc, 0x03, 0xf8, 0x01, 0xf8,
   0x01, 0xfc, 0xff, 0x1f, 0xf0, 0xff, 0x07, 0x7e, 0x3d, 0xfc, 0x7f, 0xfc,
   0x0f, 0xf8, 0x01, 0xfc, 0x01, 0xfc, 0xff, 0x0f, 0xe0, 0xff, 0x07, 0xfc,
   0x7f, 0xfc, 0x7f, 0xfc, 0x0b, 0xfe, 0x81, 0xff, 0x01, 0xfc, 0xff, 0x07,
   0x80, 0xff, 0x07, 0xfc, 0x7f, 0xfc, 0x7f, 0xf8, 0xf0, 0xff, 0xf3, 0xff,
   0x01, 0xfc, 0xff, 0x01, 0x00, 0xfe, 0xf7, 0xff, 0xff, 0xfc, 0x7d, 0x38,
   0xf0, 0xff, 0xff, 0xff, 0x71, 0xfc, 0x7f, 0x00, 0x00, 0xf8, 0xff, 0xff,
   0xff, 0xff, 0x71, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xfc, 0xf8, 0x1f, 0x00,
   0x00, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xfc, 0xff, 0xff, 0xff,
   0xfe, 0xfb, 0x03, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xf8, 0x00,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff,
   0xff, 0xff, 0xfe, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x40, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd4, 0xff, 0xff, 0x2b, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

U8G2_SSD1306_128X32_UNIVISION_F_HW_I2C u8g2(U8G2_R0); 

 void setup(void) {
   u8g2.begin();
}

  void loop(void) {

    /* This loop contains a lot of random based on the documentation, all examples are seperated with a delay */ 

    //Draw Bitmap
    u8g2.clearBuffer();
    u8g2.drawXBM( 0, 0, bitmap_width, bitmap_height, bitmap_bits);
    u8g2.sendBuffer();

    delay(3000);


    //Just put stuff on top of buffer

    u8g2.clearBuffer();

    u8g2.drawBox(0,0,132, 32); // X, Y, Width, Height
    u8g2.setDrawColor(0);
    u8g2.setFont(u8g2_font_unifont_t_symbols);
    u8g2.drawUTF8(5, 20, "Snowman: ☃");	
    u8g2.sendBuffer();

    u8g2.setDrawColor(1); // reset draw color

    delay(3000);

    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_unifont_t_symbols);
    u8g2.drawUTF8(5, 20, "Snowman: ☃");	
    u8g2.sendBuffer();


    delay(3000);


    //Progress bar
    for (int i=0; i <= 128; i++) {
      //Example square
    u8g2.clearBuffer();
    u8g2.drawBox(0,0,i, 32); // X, Y, Width, Height
    u8g2.sendBuffer();         // transfer internal memory to the display
    delay(10);
    }

    delay(1000);

    //Example square
    u8g2.clearBuffer();
    u8g2.drawBox(54, 6,20, 20); // X, Y, Width, 
    u8g2.sendBuffer();         // transfer internal memory to the display

    delay(3000);

    u8g2.clearBuffer();					// clear the internal memory
    u8g2.setFont(u8g2_font_luBIS14_tf);  // choose a suitable font at https://github.com/olikraus/u8g2/wiki/fntlistall
    u8g2.drawStr(0,20,"Graunephar");	// write something to the internal memory
    u8g2.sendBuffer();					// transfer internal memory to the display
    delay(3000);

    u8g2.clearBuffer();         // clear the internal memory
    u8g2.setFont(u8g2_font_logisoso28_tr);  // choose a suitable font at https://github.com/olikraus/u8g2/wiki/fntlistall
    u8g2.drawStr(31,24,"Hello");  // write something to the internal memory
    u8g2.sendBuffer();         // transfer internal memory to the display
    delay(800);

    u8g2.clearBuffer();         // clear the internal memory
    u8g2.setFont(u8g2_font_logisoso28_tr);  // choose a suitable font at https://github.com/olikraus/u8g2/wiki/fntlistall
    u8g2.drawStr(10,29,"World");  // write something to the internal memory
    u8g2.sendBuffer();         // transfer internal memory to the display
    delay(800);

    u8g2.clearBuffer();         // clear the internal memory
    u8g2.setFont(u8g2_font_logisoso28_tr);  // choose a suitable font at https://github.com/olikraus/u8g2/wiki/fntlistall
    u8g2.drawStr(4,29,"OLED");  // write something to the internal memory
    u8g2.sendBuffer();         // transfer internal memory to the display
    delay(2000);  
}
